from nod_e import *
from reverse_element import *
from euler_function import *
from find_simple_numbers import *
from prime_factors import *
from comparisons import *
from generator import *
from nod_e_adv import *

def start():
    tasks = {
        "Нахождение НОД по алгоритму Эвклида" : nod_e,
        "Линейное разложение НОД по расширенному алгоритму Эвклида" :  nod_e_adv,
	    "Поиск простых чисел до числа n" : find_simple_main,
	    "Каноническое разложение числа на простые множители" : find_prime_factors_main,
	    "Расчет функции Эйлера для m" : euler_function_main,
	    "Нахождение обратного элемента в Zm": reverse_element_main,
	    "Решение сравнений (для простого и составного m)": nod_e_adv,
	    "Решение системы сравнений китайским алгоритмом": nod_e_adv,
	    "Нахождение вычета a^k(mod m) для простого и составного m": nod_e_adv,
	    "Нахождение первообразного корня (образующего элемента) и формирование с его помощью приведенной системы вычетов": nod_e_adv,
	    "Решение степенного (показательного) сравнения": nod_e_adv,
	    "Нахождение символа Лежандра и символа Якоби": nod_e_adv,
	    "Нахождение порядка всех элементов в группе Zm+, Zm*": nod_e_adv,
	    "Разложение группы на подгруппы и формирование для каждой подгруппы смежных классов (для Zm+, Zm*)": nod_e_adv,
	    "Задать многочлены над полем GF2, найти их НОД и его линейное разложение": nod_e_adv,
	    "Задать неприводимый многочлен g(x) над полем GF2  и сформировать поле многочленов F[X]/g(x) как конечное расширение поля GF2, построить таблицы Кэли для «+» и «*» групп поля": nod_e_adv,
	    "Построить эллиптическую кривую над полем характеристики p>3 (p-простое), найти порядок ЭК, найти порядок точки на ЭК, определить формулу нахождения порядка ЭК над полем F(pr), r>1": nod_e_adv,
	    "Построить псевдослучайную последовательность по одному из алгоритмов генерации, обосновать выбор параметров для обеспечения максимально-возможного периода": nod_e_adv,

    }
    print("Пожалуйста, выберете задание: ")
    for i in range(0,len(tasks.keys())):
        print(i,") ", list(tasks.keys())[i])
    task = input()
    tasks[list(tasks.keys())[int(task)]]()
    input("Нажмите любую клавишу для продолжения")

while(True):
    start()
